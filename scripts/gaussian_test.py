import numpy as np
import timing
import general as g
from matplotlib import pyplot as plt
from NM import diagnostics as d
from scipy.interpolate import interp1d
from scipy.optimize import minimize, Bounds
import ssp_helpers as sh

if __name__ == '__main__':
#    f= [40, 50, 60, 80, 145, 155]
    f= 100.0#, 110]
#    f = np.linspace(50,150, 15)
    zs,rs = 40,500
    source_params = g.SourceParams(f, rs, zs)
    zr = [20.0, 25.0, 30.0, 35.0, 40.0, 45.0, 50.0, 55.0, 60.0, 65, 70.0, 75, 80]
 #   zr = np.arange(20, 80, 3)
    #`zr = [30, 32]

    # MEDIUM INFO
    rho1, rho2 = 1000, 1500
    D = 100
    cb = 1600
    cbpert = 1600  # no change
    ssp = np.array([1500, 1490, 1485, 1480, 1479, 1478, 1480, 1481, 1482, 1483, 1485, 1486, 1489, 1492, 1492, 1499, 1503, 1503, 1503, 1504])
    mean_sspf = sh.get_sspf(ssp, D, cb)
    mean_cwsspf = sh.get_water_sspf(ssp, D)
    mean_medium = g.Medium(D, rho1, rho2, cb,  mean_sspf)


    # DOMAIN LIMITS ARE AUTOGENERATED FROM THE MEDIUM AND SOURCE PARAMS
    dz, dr = .10, .10

    # PERTURBATION
    mean_depth, var, amp = 40,23, 100
    num_profs = 100
    gparams = g.GaussPertParams(mean_depth, var, amp, num_profs)
    num_perts = 2


    # COLLECT INTO SINGLE INPUT
    inp = g.GaussianModelInput(source_params, zr, mean_medium, cbpert, dz, dr, gparams, num_perts)
    
    # run inversion
    inv_list = g.gaussian_inv_run(inp)
    d.scatter_coeff(inv_list)

    inv = inv_list[0]
    d.compare_est_err(inv)
    d.compare_kern(zr, inv.c_errs, inv.dg)
